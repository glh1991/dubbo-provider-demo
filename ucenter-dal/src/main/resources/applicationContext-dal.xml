<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <!--加载配置文件-->
    <context:property-placeholder location="classpath:/config/*.properties" />

    <!--慢查询记录-->
    <bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
        <property name="slowSqlMillis" value="10000" />
        <property name="logSlowSql" value="true" />
    </bean>

    <!--数据库连接池配置-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>

        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/> <!-- 初始大小 -->
        <property name="minIdle" value="${jdbc.min.idle}"/> <!-- 队列中的最小等待数 -->
        <property name="maxActive" value="${jdbc.max.active}"/> <!-- 最大活跃数 -->

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="180000"/>  <!-- 最长等待时间，单位毫秒 -->

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <!--stat => 监控, wall => 防御sql注入 -->
        <property name="filters" value="wall,stat"/>
    </bean>

    <!--自动扫描dao下面的接口, 匹配*Mapper.xml-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="me.allensea.ucenter.dal.dao" />
    </bean>

    <!--spring mybatis-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation"
                  value="classpath:/sqlmap-config/sqlMapConfig.xml"></property>
        <property name="mapperLocations" value="classpath*:/sqlMapper/*Mapper.xml"></property>
    </bean>

    <!-- 配置SQLSession模板 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

    <!-- 使用annotation注解方式配置事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <context:component-scan base-package="me.allensea.ucenter" />
</beans>
